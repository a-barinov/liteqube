#!/bin/sh

unset DBUS_SESSION_BUS_ADDRESS
unset XDG_RUNTIME_DIR

# Default SSH options
SSH_PARAMS="-o StrictHostKeyChecking=no -q -C"
SSH_PORT="23"

# Default VNC options
VNC_PARAMS="-noraiseonbeep -depth 16"
VNC_COMPRESSION="-compresslevel 9 -quality 5"
VNC_PORT="5500"

# Default RDP options
RDP_PARAMS="/cert-ignore /bpp:16 /disp /dynamic-resolution /drive:Qubes,/home/user/tmp -clipboard"
RDP_SOUND="/audio-mode:0 /sound:sys:pulse,format:1,quality:high,rate:44100,latency:50 /microphone:sys:pulse"
RDP_COMPRESSION="-compression"
RDP_PORT="3389"


# Read and interpret parameters
CONNECTION_TYPE="${1}"

IFS_ORIG="${IFS}"
IFS="
"
read CONNECTION_SSH
read CONNECTION_ADDRESS
IFS="${IFS_ORIG}"

case x"${CONNECTION_SSH}" in
    *:*)
        IFS=":"
        set -- "junk" ${CONNECTION_SSH}
        IFS="${IFS_ORIG}"
        SSH_SERVER="${2}"
        SSH_PORT="${3}"
        ;;
    *)
        SSH_SERVER="${CONNECTION_SSH}"
        ;;
esac

case x"${CONNECTION_ADDRESS}" in
    *@*)
        IFS="@"
        set -- "junk" ${CONNECTION_ADDRESS}
        IFS="${IFS_ORIG}"
        CONNECTION_USER="${2}"
        CONNECTION_SERVER="${3}"
        ;;
    *)
        CONNECTION_SERVER="${CONNECTION_ADDRESS}"
        ;;
esac

case x"${CONNECTION_USER}" in
    *:*)
        IFS=":"
        set -- "junk" ${CONNECTION_USER}
        IFS="${IFS_ORIG}"
        CONNECTION_DOMAIN="${2}"
        CONNECTION_USER="${3}"
        ;;
esac

case x"${CONNECTION_SERVER}" in
    *:*)
        IFS=":"
        set -- "junk" ${CONNECTION_SERVER}
        IFS="${IFS_ORIG}"
        CONNECTION_SERVER="${2}"
        CONNECTION_PORT="${3}"
        ;;
    *)
        case "${CONNECTION_TYPE}" in
            vnc)
                CONNECTION_PORT="${VNC_PORT}"
                ;;
            rdp)
                CONNECTION_PORT="${RDP_PORT}"
                ;;
        esac
        ;;
esac


# Disable compression on local networks
if [ x"${CONNECTION_SSH}" = x"" ] ; then
    case "${CONNECTION_SERVER}" in
        192.168.*)
            VNC_COMPRESSION=""
            SSH_COMPRESSION=""
            ;;
        10.*)
            VNC_COMPRESSION=""
            SSH_COMPRESSION=""
            ;;
    esac
fi


# Create SSH port forward if requested
if ! [ x"${CONNECTION_SSH}" = x"" ] ; then
    /usr/bin/qrexec-client-vm dom0 liteqube.Message+Connecting_to_SSH
    SSH_VAULT_VM="core-keys"
    export SSH_AUTH_SOCK=/home/user/.ssh/ssh-agent-$SSH_VAULT_VM
    sudo /bin/systemctl start liteqube-split-ssh.socket
    /usr/bin/ssh -L "127.0.0.1:${CONNECTION_PORT}:${CONNECTION_SERVER}:${CONNECTION_PORT}" ${SSH_PARAMS} -p "${SSH_PORT}" "${SSH_SERVER}" sleep 30 &
    for DELAY in 1 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 ; do
        if netstat -pntl 2>/dev/null | grep "${CNNECTION_PORT}" >/dev/null 2>&1 ; then
            break
        else
            if [ ${DELAY} = 0 ] ; then
                /usr/bin/qrexec-client-vm dom0 liteqube.Error+SSH_connection_failed
                sudo /bin/systemctl stop liteqube-split-ssh.socket
                exit 1
            else
                sleep ${DELAY}
            fi
        fi
    done
    /usr/bin/qrexec-client-vm dom0 liteqube.Message+SSH_Connected
    sudo /bin/systemctl stop liteqube-split-ssh.socket
    CONNECTION_SERVER="127.0.0.1"
    RDP_SOUND=""
fi


# Make connection name human-readable. You can insert your translations here
NAME="${CONNECTION_TYPE}@${CONNECTION_SERVER}"
case "${NAME}" in
    *)
        ;;
esac


# Get password from core-keys or dom0
PASSWORD="$(/usr/bin/qrexec-client-vm core-keys liteqube.SplitPassword+"${NAME}")"
[ -z "${PASSWORD}" ] && PASSWORD="$(/usr/bin/qrexec-client-vm dom0 liteqube.SplitPassword+"${NAME}")"


# Connect
case "${CONNECTION_TYPE}" in
    vnc)
        #echo "${PASSWORD}" | exec vncviewer ${VNC_PARAMS} ${VNC_COMPRESSION} -user "${CONNECTION_USER}" -autopass "${CONNECTION_SERVER}::${CONNECTION_PORT}"
        echo "${PASSWORD}" | exec vncviewer ${VNC_PARAMS} ${VNC_COMPRESSION} "${CONNECTION_SERVER}::${CONNECTION_PORT}"
        ;;
    rdp)
        echo "${PASSWORD}" | exec xfreerdp /t:"${NAME}" /v:"${CONNECTION_SERVER}:${CONNECTION_PORT}" /d:"${CONNECTION_DOMAIN}" "/u:${CONNECTION_USER}" ${RDP_PARAMS} ${RDP_COMPRESSION} ${RDP_SOUND} /from-stdin
        ;;
    *)
        /usr/bin/qrexec-client-vm dom0 liteqube.Error+Unknown_connection_type
        exit 1
        ;;
esac
